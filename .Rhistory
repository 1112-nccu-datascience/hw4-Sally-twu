data(iris)
# log transform
log.ir <- log(iris[, 1:4])
ir.species <- iris[, 5]
# apply PCA - scale. = TRUE is highly advisable, but default is FALSE.
ir.pca <- prcomp(log.ir,center = TRUE, scale. = TRUE)
library(ggbiplot)
g <- ggbiplot(ir.pca, obs.scale = 1, var.scale = 1, groups = ir.species, circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal', legend.position = 'top')
print(g)
data(iris)
# log transform
log.ir <- log(iris[, 1:4])
ir.species <- iris[, 5]
# apply PCA - scale. = TRUE is highly advisable, but default is FALSE.
ir.pca <- prcomp(log.ir,center = TRUE, scale. = TRUE)
library(ggbiplot)
g <- ggbiplot(ir.pca,choices = 1:4, obs.scale = 1, var.scale = 1, groups = ir.species, circle = TRUE)
library(shiny); runApp('hw4_110354011.R')
data(iris)
# log transform
log.ir <- log(iris[1:150, 1:4])
ir.species <- iris[1:150, 5]
# apply PCA - scale. = TRUE is highly advisable, but default is FALSE.
ir.pca <- prcomp(log.ir,center = TRUE, scale. = TRUE)
library(ggbiplot)
g <- ggbiplot(ir.pca,choices = 1:2, obs.scale = 1, var.scale = 1, groups = ir.species, circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal', legend.position = 'top')
plot(g)
data(iris)
# log transform
log.ir <- log(iris[1:150, 1:4])
ir.species <- iris[1:150, 5]
# apply PCA - scale. = TRUE is highly advisable, but default is FALSE.
ir.pca <- prcomp(log.ir,center = TRUE, scale. = TRUE)
library(ggbiplot)
g <- ggbiplot(ir.pca,choices = 1:3, obs.scale = 1, var.scale = 1, groups = ir.species, circle = TRUE)
library(shiny); runApp('hw4_110354011.R')
data(iris)
# log transform
log.ir <- log(iris[1:150, 1:4])
ir.species <- iris[1:150, 5]
# apply PCA - scale. = TRUE is highly advisable, but default is FALSE.
ir.pca <- prcomp(log.ir,center = TRUE, scale. = TRUE)
library(ggbiplot)
g <- ggbiplot(ir.pca,choices = c(input$X,input$Y), obs.scale = 1, var.scale = 1, groups = ir.species, circle = TRUE)
data(iris)
# log transform
log.ir <- log(iris[1:150, 1:4])
ir.species <- iris[1:150, 5]
# apply PCA - scale. = TRUE is highly advisable, but default is FALSE.
ir.pca <- prcomp(log.ir,center = TRUE, scale. = TRUE)
library(ggbiplot)
g <- ggbiplot(ir.pca,choices = c(1,2), obs.scale = 1, var.scale = 1, groups = ir.species, circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal', legend.position = 'top')
plot(g)
data(iris)
# log transform
log.ir <- log(iris[1:100, 1:4])
ir.species <- iris[1:100, 5]
# apply PCA - scale. = TRUE is highly advisable, but default is FALSE.
ir.pca <- prcomp(log.ir,center = TRUE, scale. = TRUE)
library(ggbiplot)
g <- ggbiplot(ir.pca,choices = c(1,2), obs.scale = 1, var.scale = 1, groups = ir.species, circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal', legend.position = 'top')
plot(g)
data(iris)
# log transform
log.ir <- log(iris[1:6, 1:4])
ir.species <- iris[1:6, 5]
# apply PCA - scale. = TRUE is highly advisable, but default is FALSE.
ir.pca <- prcomp(log.ir,center = TRUE, scale. = TRUE)
library(ggbiplot)
g <- ggbiplot(ir.pca,choices = c(1,2), obs.scale = 1, var.scale = 1, groups = ir.species, circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal', legend.position = 'top')
plot(g)
runApp('hw4_110354011.R')
runApp('hw4_110354011.R')
runApp('hw4_110354011.R')
data(iris)
# log transform
log.ir <- log(iris[1:100, 1:4])
ir.species <- iris[1:100, 5]
# apply PCA - scale. = TRUE is highly advisable, but default is FALSE.
ir.pca <- prcomp(log.ir,center = TRUE, scale. = TRUE)
library(ggbiplot)
g <- ggbiplot(ir.pca,choices = c(1,2), obs.scale = 1, var.scale = 1, groups = ir.species, circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal', legend.position = 'top')
print(g)
runApp('hw4_110354011.R')
runApp('hw4_110354011.R')
data(iris)
# log transform
log.ir <- log(iris[1:input$number, 1:4])
log.ir <- log(iris[1:150, 1:4])
ir.species <- iris[1:150, 5]
# apply PCA - scale. = TRUE is highly advisable, but default is FALSE.
ir.pca <- prcomp(log.ir,center = TRUE, scale. = TRUE)
g <- ggbiplot(ir.pca,choices = c(1,2), obs.scale = 1, var.scale = 1, groups = ir.species, circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal', legend.position = 'top')
print(g)
data(iris)
# log transform
log.ir <- log(iris[1:150, 1:4])
ir.species <- iris[1:150, 5]
# apply PCA - scale. = TRUE is highly advisable, but default is FALSE.
ir.pca <- prcomp(log.ir,center = TRUE, scale. = TRUE)
g <- ggbiplot(ir.pca,choices = c(1,3), obs.scale = 1, var.scale = 1, groups = ir.species, circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal', legend.position = 'top')
print(g)
data(iris)
# log transform
log.ir <- log(iris[1:150, 1:4])
ir.species <- iris[1:150, 5]
# apply PCA - scale. = TRUE is highly advisable, but default is FALSE.
ir.pca <- prcomp(log.ir,center = TRUE, scale. = TRUE)
g <- ggbiplot(ir.pca,choices = c(3,3), obs.scale = 1, var.scale = 1, groups = ir.species, circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal', legend.position = 'top')
print(g)
data(iris)
# log transform
log.ir <- log(iris[1:100, 1:4])
ir.species <- iris[1:100, 5]
# apply PCA - scale. = TRUE is highly advisable, but default is FALSE.
ir.pca <- prcomp(log.ir,center = TRUE, scale. = TRUE)
g <- ggbiplot(ir.pca,choices = c(3,3), obs.scale = 1, var.scale = 1, groups = ir.species, circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal', legend.position = 'top')
print(g)
runApp('hw4_110354011.R')
runApp('hw4_110354011.R')
runApp('hw4_110354011.R')
runApp('ggvisExample')
library(shiny)
runApp("110354011", display.mode = "showcase")
runApp("110354011", display.mode = "showcase")
runApp("110354011", display.mode = "showcase")
runApp("110354011", display.mode = "showcase")
library(ca)
fit <- ca(iris)
iris
fit <- ca(obj = iris)
library(ca)
data("smoke")
fit <- ca(smoke)
summary(fit)
plot(fit)
data("smoke")
force(smoke)
fit <- ca(iris[1:150, 1:4])
summary(fit)
plot(fit)
runApp('110354011')
runApp('110354011')
View(iris)
View(ir.pca)
